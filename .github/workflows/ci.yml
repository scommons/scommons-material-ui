name: CI

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'

    - name: Cache sbt
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          ~/.cache/coursier/v1
        key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt', 'project/**/*.scala') }}

    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.npm
          ~/.nvm
          ~/work/scommons-material-ui/scommons-material-ui/codegen/target/scala-2.13/scalajs-bundler/test/node_modules
          ~/work/scommons-material-ui/scommons-material-ui/codegen/target/scala-2.13/scalajs-bundler/test/package-lock.json
          ~/work/scommons-material-ui/scommons-material-ui/core/target/scala-2.13/scalajs-bundler/test/node_modules
          ~/work/scommons-material-ui/scommons-material-ui/core/target/scala-2.13/scalajs-bundler/test/package-lock.json
          ~/work/scommons-material-ui/scommons-material-ui/test/target/scala-2.13/scalajs-bundler/test/node_modules
          ~/work/scommons-material-ui/scommons-material-ui/test/target/scala-2.13/scalajs-bundler/test/package-lock.json
          ~/work/scommons-material-ui/scommons-material-ui/showcase/target/scala-2.13/scalajs-bundler/test/node_modules
          ~/work/scommons-material-ui/scommons-material-ui/showcase/target/scala-2.13/scalajs-bundler/test/package-lock.json
        key: ${{ runner.os }}-node_modules-cache-v2-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-cache-v2-

    - name: Run tests
      run: sbt coverage test && sbt coverageAggregate coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

    - name: Extract Tag Name
      run: echo "TAG_NAME=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV && echo "TAG_NAME=$TAG_NAME"
      if: startsWith(github.ref, 'refs/tags')

    - name: Publish SNAPSHOT
      run: sbt clean publish
      if: ${{ !github.event.pull_request && env.TAG_NAME == '' }}
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

    - name: Publish RELEASE
      run: echo "TAG_NAME=$TAG_NAME"
      if: env.TAG_NAME != ''
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
